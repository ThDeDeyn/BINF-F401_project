install.packages("DESeq2")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
library(grid)
library(gridExtra)
library(caret)
library(FactoMineR)
library("factoextra")
library(backports)
p_value = .05
morphological_counts = read_tsv("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland/Data_ThyroidGland/OG/morphological_counts_lunit_dino.tsv")
RNA_read = read_tsv("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland/Data_ThyroidGland/OG/RNA_read_counts.tsv")
rownames(RNA_read) = RNA_read$Name
df = RNA_read %>% select_if(is.numeric)
rownames(df) = RNA_read$Name
maxs = apply(df,1, function(var) max(var, na.rm = TRUE))
hist(log10(maxs + 1))
median = apply(df,1, function(var) median(var, na.rm = TRUE))
hist(log10(median + 1))
hist(log10(median))
med_avg = apply(df,1, function(var) mad(var, na.rm = TRUE))
hist(log10(med_avg + 1))
hist(log10(med_avg))
high_mad = med_avg > 10**1.5
high_expr = maxs > 10**2.5
high_median = median > 10**2
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
View(RNA_read)
View(morphological_counts)
View(morphological_counts)
coldata = morphological_counts
#Checking if coldata is fine:
all(colnames(cts) %in% rownames(coldata))
colnames(cts) %in% rownames(coldata)
View(cts)
rownames(coldata) = coldata$SMPLID
#Checking if coldata is fine:
all(colnames(cts) %in% rownames(coldata))
#Checking if same order:
all(colnames(cts) == rownames(colData))
#Checking if same order:
all(colnames(cts) == rownames(coldata))
#Checking if same order:
all(colnames(cts) == rownames(coldata))
coldata[1]
coldata[1,1]
View(coldata)
rownames(coldata)
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ Mophological.cluster.G4_0)
library(DESeq2)
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(DESeq2)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ Mophological.cluster.G4_0)
dds <- DESeq(dds)
red = results(dds)
res = results(dds)
View(res)
res
res
signif = res[1]
res[1]
res[1,]
signif = res[res$pvalue < p_value,]
res$pvalue < p_value
any(is.na(res$pvalue))
sum(is.na(res$pvalue))
signif = res
#Some values are NA:
signif$pvalue[is.na(signif$pvalue)] = 1
signif = signif[res$pvalue < p_value,]
signif = signif[signif$pvalue < p_value,]
upreg = signif
#Some values are NA:
upreg$pvalue[is.na(upreg$pvalue)] = 0
upreg = upreg[upreg$pvalue > 0,]
View(upreg)
upreg
upreg = signif
#Some values are NA:
upreg$pvalue[is.na(upreg$log2FoldChange)] = 0
upreg = upreg[upreg$log2FoldChange > 0,]
upreg
hist(upreg$baseMean)
hist(upreg$baseMean)
hist(log10(upreg$baseMean))
hist(log10(upreg$baseMean + 1))
hist(log10(upreg$baseMean + 1))
hist(upreg$log2FoldChange)
hist(log10(upreg$log2FoldChange + 1))
hist(upreg$log2FoldChange)
hist(log10(upreg$log2FoldChange + 1))
max(upreg$log2FoldChange)
upreg
upreg = upreg[order(upreg$log2FoldChange),]
upreg
upreg = upreg[order(-upreg$log2FoldChange),]
upreg
View(upreg[10,])
upreg[10,]
upreg[20,]
upreg
View(upreg[1:10,])
upreg[1:10,]
View(coldata)
View(coldata)
upreg
View(morphological_counts)
View(cts)
View(RNA_read)
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
rowname(cts) = rownames(df)
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
rownames(cts) = rownames(df)
cts
rownames(cts) = rownames(df[cond, ])
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
rownames(cts) = rownames(df[cond, ])
rownames(coldata) = coldata$SMPLID
#Checking if coldata is fine:
all(colnames(cts) %in% rownames(coldata))
#Checking if same order:
all(colnames(cts) == rownames(coldata))
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ Mophological.cluster.G4_0)
dds <- DESeq(dds)
res = results(dds)
signif = res
#Some values are NA:
signif$padj[is.na(signif$padj)] = 1
signif = signif[signif$padj < p_value,]
upreg = signif
#Some values are NA:
upreg$pvalue[is.na(upreg$log2FoldChange)] = 0
upreg = upreg[upreg$log2FoldChange > 0,]
hist(upreg$log2FoldChange)
hist(log10(upreg$log2FoldChange + 1))
upreg
max(upreg$log2FoldChange)
upreg = upreg[order(-upreg$log2FoldChange),]
upreg[1:10,]
View(coldata)
View(df)
rownames(df[cond, ])
rownames(df)
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
rownames(cts) = rownames(df)[cond, ]
cond = (high_mad & high_expr)
print(sum(cond))
cts = df[cond, ]
rownames(cts) = rownames(df)[cond]
rownames(coldata) = coldata$SMPLID
#Checking if coldata is fine:
all(colnames(cts) %in% rownames(coldata))
#Checking if same order:
all(colnames(cts) == rownames(coldata))
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ Mophological.cluster.G4_0)
dds <- DESeq(dds)
res = results(dds)
res
min(res$padj)
min(res$padj, na.rm = TRUE)
max(res$padj, na.rm = TRUE)
signif = res
#Some values are NA:
signif$padj[is.na(signif$padj)] = 0.555555555555
max(signif$padj, na.rm = TRUE)
signif = signif[signif$padj < p_value,]
max(signif$padj, na.rm = TRUE)
signif
upreg = signif
#Some values are NA:
upreg$pvalue[is.na(upreg$log2FoldChange)] = 0
upreg = upreg[upreg$log2FoldChange > 0,]
upreg
hist(upreg$log2FoldChange)
hist(log10(upreg$log2FoldChange + 1))
hist(upreg$log2FoldChange)
hist(log10(upreg$log2FoldChange + 1))
max(upreg$log2FoldChange)
upreg = upreg[order(-upreg$log2FoldChange),]
upreg[1:10,]
summary(upreg)
summary(res)
upreg[1:10,]
summary(res)
summary(upreg)
