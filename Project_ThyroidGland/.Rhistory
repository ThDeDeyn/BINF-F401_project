print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 30
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  + 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 40
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  + 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 10
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  + 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
df$y[i-1] < setpoint
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 10
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  + 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 + 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 10
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 30
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(df$y[i-1] < setpoint){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}else if(df$y[i-1] > setpoint){
df$y[i] = df$y[i-1] * (1 - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(error > 2){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(error > 2){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:100
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(error > 2){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(error > 2){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(error > 1){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(abs(error) > 2){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(abs(error) > 1 or 1){
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
%if(abs(error) > 1 ){
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 20
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 10
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
y
df$y
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 40
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 30
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 20
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 30
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 30
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
if(df$y[i] < 0){df$y[i] = 0}
#}
print(df$y[i])
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
library(tidyverse)
x = 1:40
df = as.data.frame(x)
df = df %>% mutate( y = df$x )
setpoint = 5
df$y[1] = 30
print(df$y[1])
print(df$y[1] < setpoint)
for(i in 2:length(df$x)){
print(i)
error = - setpoint + df$y[i-1]
#if(abs(error) > 1 ){
df$y[i] = df$y[i-1] * (1  - 0.05 * error)
if(df$y[i] < 0){df$y[i] = 0}
#}
print(df$y[i])
print(error)
print(df$y[i] < setpoint)
}
plot(df$x, df$y)
RNA_read_counts <- read.delim("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project INFO-G-4410/Data_ThyroidGland/RNA_read_counts.tsv", header=FALSE)
View(RNA_read_counts)
morphological_counts_lunit_dino <- read.delim("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project INFO-G-4410/Data_ThyroidGland/morphological_counts_lunit_dino.tsv", header=FALSE)
View(morphological_counts_lunit_dino)
View(RNA_read_counts)
View(RNA_read_counts)
library(tidyverse)
##
# Loading data
##
setwd("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland")
clinical_data = read_tsv("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland/Data_ThyroidGland/OG/clinical_data.tsv")
morphological_counts_lunit_dino = read_tsv("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland/Data_ThyroidGland/OG/morphological_counts_lunit_dino.tsv")
RNA_read_counts = read_tsv("D:/Polytech/MA2 2023-2024/Q2/Genomics/Project_ThyroidGland/Data_ThyroidGland/OG/RNA_read_counts.tsv")
##
# clinical_data analysis
##
##
# Performing first analysis: histograms with mean & sd
##
clinical_class <- sapply(clinical_data, class)
clinical_numeric =  clinical_data %>% select(where(is.numeric)) %>% colnames()
path_out = "Result/Data_description"
cairo_pdf(paste(path_out, "clinical_histograms.pdf", sep = "/"), onefile = T)
for(var in clinical_numeric){
print(var)
hist = hist(clinical_data[[var]],
col = "#DE2F56",        # Setting color of bars
border = "black",       # Setting color of border
main = "Histogram of numeric variables in clinical_data",  # Setting main title
xlab = var,         # Setting x-axis label
ylab = "Count")     # Setting y-axis label
}
dev.off()
